@model IEnumerable<Data_Access_Layer.Entities.Test>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> signInMahager;
@{
    ViewData["Title"] = "Manage Tests";
    Layout = "_Layout-2";
    

}
@using Data_Access_Layer.Entities



<div class="manage course content">
    @if (signInMahager.IsSignedIn(User) && User.IsInRole("Teacher"))
    {
        <a class="myButton text-white" asp-controller="Test" asp-action="Create">Create Test</a>
    }
    
    @{

        @foreach(var test in Model)
        {
            
     <div class="courseDetails flex-column justify-content-between" style="width:100%">
    <div class="d-flex justify-content-between">
        <h2 class="CourseName text-white">@test.Course.name | @test.name</h2>
                    @if (signInMahager.IsSignedIn(User) && User.IsInRole("Teacher"))
                    {
                                <a class="AddStudentBtn text-white" asp-controller="Question" asp-action="GetAllQuestions" asp-route-id="@test.id">View Test</a>

                }
                    else
                    {
                            <a class="AddStudentBtn text-white" asp-controller="Question" asp-action="StartTest" asp-route-id="@test.id">Start Test</a>

                    }

    </div>
    <p class="CourseDescription text-white" style="width:60%"> @test.description</p>
    

                @if (signInMahager.IsSignedIn(User) && User.IsInRole("Teacher"))
                {
                    <div class="d-flex align-items-start">
        <a class="EditCourseButton text-white" asp-controller="Test" asp-action="Edit" asp-route-id="@test.id">Edit</a>
        <a class="DeleteCourseButton text-white" asp-controller="Test" asp-action="Delete" asp-route-id="@test.id">Delete</a>
    </div>
                }
    
</div>
          
 

        }
    }
</div>